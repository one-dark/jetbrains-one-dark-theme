plugins {
    id 'one-dark-theme-plugin'
    id 'org.jetbrains.intellij' version '1.2.0'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'org.jlleitschuh.gradle.ktlint' version '8.2.0'
    id 'org.kordamp.gradle.markdown' version '2.2.0'
}

group 'com.markskelton'
version System.getenv().getOrDefault('VERSION', '').replace('refs/tags/v', '')

repositories {
    mavenCentral()
}

dependencies {
  implementation 'io.sentry:sentry:5.0.1'
  implementation 'commons-io:commons-io:2.6'
}

configurations {
  implementation.exclude group: 'org.slf4j'
}

intellij {
  version.set('2021.3')
  type.set('IC')
  downloadSources.set(true)
  updateSinceUntilBuild.set(true)
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

markdownToHtml {
  sourceDir = new File("$projectDir/build/markdown")
  outputDir = new File("$projectDir/build/html")

  tables = false
}

tasks.runIde {
  def idePath = project.hasProperty("idePath") ? project.findProperty("idePath") : ""
  if(!"".equalsIgnoreCase(idePath)) {
    ideDir.set(file(idePath))
  }
}

tasks.runPluginVerifier {
  ideVersions.set([
// will bring this back when able to verify on 2021.3 builds
//    "IC-2021.3",
  ])
}

tasks.patchPluginXml {
    sinceBuild.set('203.7148.57')
    untilBuild.set('221.*')

    def changelogPath = "$projectDir/build/html/CHANGELOG.html"
    def readmePath = "$projectDir/build/html/README.html"

    if (file(changelogPath).exists()) {
        changeNotes.set( provider {
          file(changelogPath).text
        } )
    }

    if (file(readmePath).exists()) {
        pluginDescription.set(provider {
          file(readmePath).text
        })
    }
}

tasks.markdownToHtml.dependsOn("createReleaseNotes")
tasks.markdownToHtml.dependsOn("copyReadme")
tasks.patchReadMeHtml.dependsOn("markdownToHtml")
tasks.patchPluginXml.dependsOn("patchReadMeHtml")
tasks.patchPluginXml.dependsOn("createThemes")

publishPlugin {
    token.set(System.getenv('PUBLISH_TOKEN'))
}
